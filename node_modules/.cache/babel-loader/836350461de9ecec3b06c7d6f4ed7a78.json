{"ast":null,"code":"import jsPDF from \"jspdf\";\nimport * as htmlToImage from \"html-to-image\";\nexport async function exportCrimeDataToPdf() {\n  const doc = new jsPDF(\"p\", \"px\");\n  const pageWidth = doc.internal.pageSize.getWidth();\n  const pageHeight = doc.internal.pageSize.getHeight();\n  const padding = 10; // Adjust padding as needed\n\n  const graphWidth = pageWidth - 10 * padding; // Four graphs in a row\n\n  const graphHeight = (pageHeight - 6 * padding) / 4; // Set the desired height for each graph\n\n  const elements = document.getElementsByClassName(\"custom-chart\");\n\n  for (let i = 0; i < elements.length; i) {\n    // Add header\n    doc.setFontSize(16);\n    doc.text(\"Crime Data Report\", padding, padding);\n\n    for (let j = 0; j < 4 && j + i < elements.length; j++, i++) {\n      const el = elements[i];\n      const imgData = await htmlToImage.toPng(el);\n      const x = 5 * padding;\n      const y = (j + 1) * (graphHeight + padding) + padding; // Adjust the y-coordinate for the graphs\n\n      doc.addImage(imgData, \"PNG\", x, y, graphWidth, graphHeight); // Add footer\n\n      doc.setFontSize(12);\n      doc.text(`Page ${i + 1} of ${Math.ceil(elements.length / 4)}`, padding, pageHeight - padding);\n    }\n\n    if (i < elements.length) doc.addPage();\n  }\n\n  doc.save(\"crime_data.pdf\");\n}","map":{"version":3,"sources":["/Users/gaurav/Downloads/aaaaaa/src/utils.ts"],"names":["jsPDF","htmlToImage","exportCrimeDataToPdf","doc","pageWidth","internal","pageSize","getWidth","pageHeight","getHeight","padding","graphWidth","graphHeight","elements","document","getElementsByClassName","i","length","setFontSize","text","j","el","imgData","toPng","x","y","addImage","Math","ceil","addPage","save"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B;AAEA,OAAO,eAAeC,oBAAf,GAAsC;AAC3C,QAAMC,GAAG,GAAG,IAAIH,KAAJ,CAAU,GAAV,EAAe,IAAf,CAAZ;AACA,QAAMI,SAAS,GAAGD,GAAG,CAACE,QAAJ,CAAaC,QAAb,CAAsBC,QAAtB,EAAlB;AACA,QAAMC,UAAU,GAAGL,GAAG,CAACE,QAAJ,CAAaC,QAAb,CAAsBG,SAAtB,EAAnB;AACA,QAAMC,OAAO,GAAG,EAAhB,CAJ2C,CAIvB;;AACpB,QAAMC,UAAU,GAAIP,SAAS,GAAG,KAAKM,OAArC,CAL2C,CAKI;;AAC/C,QAAME,WAAW,GAAG,CAACJ,UAAU,GAAG,IAAIE,OAAlB,IAA6B,CAAjD,CAN2C,CAMS;;AAEpD,QAAMG,QAAQ,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,cAAhC,CAAjB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,QAAQ,CAACI,MAA7B,EAAqCD,CAArC,EAAwC;AACtC;AACAb,IAAAA,GAAG,CAACe,WAAJ,CAAgB,EAAhB;AACAf,IAAAA,GAAG,CAACgB,IAAJ,CAAS,mBAAT,EAA8BT,OAA9B,EAAuCA,OAAvC;;AAEA,SAAK,IAAIU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAAJ,IAASA,CAAC,GAAGJ,CAAJ,GAAQH,QAAQ,CAACI,MAA1C,EAAkDG,CAAC,IAAIJ,CAAC,EAAxD,EAA4D;AAC1D,YAAMK,EAAE,GAAGR,QAAQ,CAACG,CAAD,CAAnB;AACA,YAAMM,OAAO,GAAG,MAAMrB,WAAW,CAACsB,KAAZ,CAAkBF,EAAlB,CAAtB;AAEA,YAAMG,CAAC,GAAG,IAAId,OAAd;AACA,YAAMe,CAAC,GAAG,CAACL,CAAC,GAAG,CAAL,KAAWR,WAAW,GAAGF,OAAzB,IAAoCA,OAA9C,CAL0D,CAKH;;AAEvDP,MAAAA,GAAG,CAACuB,QAAJ,CAAaJ,OAAb,EAAsB,KAAtB,EAA6BE,CAA7B,EAAgCC,CAAhC,EAAmCd,UAAnC,EAA+CC,WAA/C,EAP0D,CAS1D;;AACAT,MAAAA,GAAG,CAACe,WAAJ,CAAgB,EAAhB;AACAf,MAAAA,GAAG,CAACgB,IAAJ,CAAU,QAAOH,CAAC,GAAG,CAAE,OAAMW,IAAI,CAACC,IAAL,CAAUf,QAAQ,CAACI,MAAT,GAAkB,CAA5B,CAA+B,EAA5D,EAA+DP,OAA/D,EAAwEF,UAAU,GAAGE,OAArF;AACD;;AAED,QAAIM,CAAC,GAAGH,QAAQ,CAACI,MAAjB,EACEd,GAAG,CAAC0B,OAAJ;AACH;;AAED1B,EAAAA,GAAG,CAAC2B,IAAJ,CAAS,gBAAT;AACD","sourcesContent":["import jsPDF from \"jspdf\";\nimport * as htmlToImage from \"html-to-image\";\n\nexport async function exportCrimeDataToPdf() {\n  const doc = new jsPDF(\"p\", \"px\");\n  const pageWidth = doc.internal.pageSize.getWidth();\n  const pageHeight = doc.internal.pageSize.getHeight();\n  const padding = 10; // Adjust padding as needed\n  const graphWidth = (pageWidth - 10 * padding); // Four graphs in a row\n  const graphHeight = (pageHeight - 6 * padding) / 4; // Set the desired height for each graph\n\n  const elements = document.getElementsByClassName(\"custom-chart\");\n\n  for (let i = 0; i < elements.length; i) {\n    // Add header\n    doc.setFontSize(16);\n    doc.text(\"Crime Data Report\", padding, padding);\n\n    for (let j = 0; j < 4 && j + i < elements.length; j++, i++) {\n      const el = elements[i] as HTMLElement;\n      const imgData = await htmlToImage.toPng(el);\n\n      const x = 5 * padding;\n      const y = (j + 1) * (graphHeight + padding) + padding; // Adjust the y-coordinate for the graphs\n\n      doc.addImage(imgData, \"PNG\", x, y, graphWidth, graphHeight);\n\n      // Add footer\n      doc.setFontSize(12);\n      doc.text(`Page ${i + 1} of ${Math.ceil(elements.length / 4)}`, padding, pageHeight - padding);\n    }\n\n    if (i < elements.length)\n      doc.addPage();\n  }\n\n  doc.save(\"crime_data.pdf\");\n}"]},"metadata":{},"sourceType":"module"}