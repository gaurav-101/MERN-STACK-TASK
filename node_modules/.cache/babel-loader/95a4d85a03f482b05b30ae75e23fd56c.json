{"ast":null,"code":"var _jsxFileName = \"/Users/gaurav/Downloads/aaaaaa/src/CrimeData.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Chart from \"chart.js/auto\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CrimeData = () => {\n  _s();\n\n  const [crimeData, setCrimeData] = useState([]);\n  useEffect(() => {\n    axios.get(\"https://api.usa.gov/crime/fbi/cde/arrest/state/AK/all?from=2015&to=2020&API_KEY=iiHnOKfno2Mgkt5AynpvPpUQTEyxE77jo1RU8PIv\").then(response => {\n      const data = response.data.data; // Extract the \"data\" property\n\n      if (data) {\n        // Create an object to store crime data by crime type\n        const crimeDataByType = {};\n        setCrimeData(Object.values(crimeDataByType)); // Loop through the data and organize it by crime type\n\n        data.forEach(entry => {\n          Object.keys(entry).forEach(key => {\n            if (key !== \"data_year\") {\n              if (!crimeDataByType[key]) {\n                crimeDataByType[key] = [];\n              }\n\n              crimeDataByType[key].push(entry[key]);\n            }\n          });\n        });\n        setCrimeData(crimeDataByType); // Create a graph for each crime type\n\n        Object.keys(crimeDataByType).forEach(crimeType => {\n          const canvas = document.getElementById(`crimeChart-${crimeType}`);\n\n          if (canvas) {\n            new Chart(canvas, {\n              type: \"line\",\n              data: {\n                labels: data.map(entry => entry.data_year),\n                datasets: [{\n                  label: crimeType,\n                  data: crimeDataByType[crimeType],\n                  borderColor: \"rgba(75, 192, 192, 1)\",\n                  borderWidth: 1,\n                  fill: false\n                }]\n              }\n            });\n          }\n        });\n      } else {\n        console.error(\"No data found in the response.\");\n      }\n    }).catch(error => {\n      console.error(\"Error fetching data:\", error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"crimeData\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Crime Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), Object.keys(crimeData).map(crimeType => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-chart\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: crimeType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        id: `crimeChart-${crimeType}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, crimeType, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CrimeData, \"tQikb6sGcEiRUGL1usKgdvOpJsI=\");\n\n_c = CrimeData;\nexport default CrimeData;\n\nvar _c;\n\n$RefreshReg$(_c, \"CrimeData\");","map":{"version":3,"sources":["/Users/gaurav/Downloads/aaaaaa/src/CrimeData.tsx"],"names":["React","useEffect","useState","axios","Chart","CrimeData","crimeData","setCrimeData","get","then","response","data","crimeDataByType","Object","values","forEach","entry","keys","key","push","crimeType","canvas","document","getElementById","type","labels","map","data_year","datasets","label","borderColor","borderWidth","fill","console","error","catch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Chart from \"chart.js/auto\";\n\nconst CrimeData = () => { \n\n  const [crimeData, setCrimeData] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(\"https://api.usa.gov/crime/fbi/cde/arrest/state/AK/all?from=2015&to=2020&API_KEY=iiHnOKfno2Mgkt5AynpvPpUQTEyxE77jo1RU8PIv\")\n      .then((response) => {\n        const data = response.data.data; // Extract the \"data\" property\n\n        if (data) {\n          // Create an object to store crime data by crime type\n          const crimeDataByType = {};\n          setCrimeData(Object.values(crimeDataByType));\n\n          // Loop through the data and organize it by crime type\n          data.forEach((entry) => {\n            Object.keys(entry).forEach((key) => {\n              if (key !== \"data_year\") {\n                if (!crimeDataByType[key]) {\n                  crimeDataByType[key] = [];\n                }\n                crimeDataByType[key].push(entry[key]);\n              }\n            });\n          });\n\n          setCrimeData(crimeDataByType);\n\n          // Create a graph for each crime type\n          Object.keys(crimeDataByType).forEach((crimeType) => {\n            const canvas = document.getElementById(`crimeChart-${crimeType}`);\n            if (canvas) {\n              new Chart(canvas, {\n                type: \"line\",\n                data: {\n                  labels: data.map((entry) => entry.data_year),\n                  datasets: [\n                    {\n                      label: crimeType,\n                      data: crimeDataByType[crimeType],\n                      borderColor: \"rgba(75, 192, 192, 1)\",\n                      borderWidth: 1,\n                      fill: false,\n                    },\n                  ],\n                },\n              });\n            }\n          });\n        } else {\n          console.error(\"No data found in the response.\");\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data:\", error);\n      });\n  }, []);\n\n  return (\n    <div id=\"crimeData\">\n      <h1>Crime Data</h1>\n      {Object.keys(crimeData).map((crimeType) => (\n        <div className=\"custom-chart\" key={crimeType}>\n          <h2>{crimeType}</h2>\n          <canvas id={`crimeChart-${crimeType}`}></canvas>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default CrimeData;"]},"metadata":{},"sourceType":"module"}