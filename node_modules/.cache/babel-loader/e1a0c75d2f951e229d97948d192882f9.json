{"ast":null,"code":"import jsPDF from \"jspdf\";\nimport * as htmlToImage from \"html-to-image\";\nexport async function exportMultipleChartsToPdf() {\n  const doc = new jsPDF(\"p\", \"px\");\n  const elements = document.getElementsByClassName(\"custom-chart\");\n  await creatPdf({\n    doc,\n    elements\n  });\n  doc.save(`charts.pdf`);\n}\n\nasync function creatPdf(_ref) {\n  let {\n    doc,\n    elements\n  } = _ref;\n  const padding = 10;\n  const marginTop = 20;\n  let top = marginTop;\n\n  for (let i = 0; i < elements.length; i++) {\n    const el = elements.item(i);\n    const imgData = await htmlToImage.toPng(el);\n    let elHeight = el.offsetHeight;\n    let elWidth = el.offsetWidth;\n    const pageWidth = doc.internal.pageSize.getWidth();\n\n    if (elWidth > pageWidth) {\n      const ratio = pageWidth / elWidth;\n      elHeight = elHeight * ratio - padding * 2;\n      elWidth = elWidth * ratio - padding * 2;\n    }\n\n    const pageHeight = doc.internal.pageSize.getHeight();\n\n    if (top + elHeight > pageHeight) {\n      doc.addPage();\n      top = marginTop;\n    }\n\n    doc.addImage(imgData, \"PNG\", padding, top, elWidth, elHeight, `image${i}`);\n    top += elHeight + marginTop;\n  }\n}","map":{"version":3,"sources":["/Users/gaurav/Downloads/aaaaaa/src/utils.ts"],"names":["jsPDF","htmlToImage","exportMultipleChartsToPdf","doc","elements","document","getElementsByClassName","creatPdf","save","padding","marginTop","top","i","length","el","item","imgData","toPng","elHeight","offsetHeight","elWidth","offsetWidth","pageWidth","internal","pageSize","getWidth","ratio","pageHeight","getHeight","addPage","addImage"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B;AAEA,OAAO,eAAeC,yBAAf,GAA2C;AAChD,QAAMC,GAAG,GAAG,IAAIH,KAAJ,CAAU,GAAV,EAAe,IAAf,CAAZ;AAEA,QAAMI,QAAQ,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,cAAhC,CAAjB;AAEA,QAAMC,QAAQ,CAAC;AAAEJ,IAAAA,GAAF;AAAOC,IAAAA;AAAP,GAAD,CAAd;AAEAD,EAAAA,GAAG,CAACK,IAAJ,CAAU,YAAV;AACD;;AAED,eAAeD,QAAf,OAMG;AAAA,MANqB;AACtBJ,IAAAA,GADsB;AAEtBC,IAAAA;AAFsB,GAMrB;AACD,QAAMK,OAAO,GAAG,EAAhB;AACA,QAAMC,SAAS,GAAG,EAAlB;AACA,MAAIC,GAAG,GAAGD,SAAV;;AAGA,OAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,QAAQ,CAACS,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACxC,UAAME,EAAE,GAAGV,QAAQ,CAACW,IAAT,CAAcH,CAAd,CAAX;AACA,UAAMI,OAAO,GAAG,MAAMf,WAAW,CAACgB,KAAZ,CAAkBH,EAAlB,CAAtB;AAEA,QAAII,QAAQ,GAAGJ,EAAE,CAACK,YAAlB;AACA,QAAIC,OAAO,GAAGN,EAAE,CAACO,WAAjB;AAEA,UAAMC,SAAS,GAAGnB,GAAG,CAACoB,QAAJ,CAAaC,QAAb,CAAsBC,QAAtB,EAAlB;;AAEA,QAAIL,OAAO,GAAGE,SAAd,EAAyB;AACvB,YAAMI,KAAK,GAAGJ,SAAS,GAAGF,OAA1B;AACAF,MAAAA,QAAQ,GAAGA,QAAQ,GAAGQ,KAAX,GAAmBjB,OAAO,GAAG,CAAxC;AACAW,MAAAA,OAAO,GAAGA,OAAO,GAAGM,KAAV,GAAkBjB,OAAO,GAAG,CAAtC;AACD;;AAED,UAAMkB,UAAU,GAAGxB,GAAG,CAACoB,QAAJ,CAAaC,QAAb,CAAsBI,SAAtB,EAAnB;;AAEA,QAAIjB,GAAG,GAAGO,QAAN,GAAiBS,UAArB,EAAiC;AAC/BxB,MAAAA,GAAG,CAAC0B,OAAJ;AACAlB,MAAAA,GAAG,GAAGD,SAAN;AACD;;AAEDP,IAAAA,GAAG,CAAC2B,QAAJ,CAAad,OAAb,EAAsB,KAAtB,EAA6BP,OAA7B,EAAsCE,GAAtC,EAA2CS,OAA3C,EAAoDF,QAApD,EAA+D,QAAON,CAAE,EAAxE;AACAD,IAAAA,GAAG,IAAIO,QAAQ,GAAGR,SAAlB;AACD;AACF","sourcesContent":["import jsPDF from \"jspdf\";\nimport * as htmlToImage from \"html-to-image\";\n\nexport async function exportMultipleChartsToPdf() {\n  const doc = new jsPDF(\"p\", \"px\");\n\n  const elements = document.getElementsByClassName(\"custom-chart\");\n\n  await creatPdf({ doc, elements });\n\n  doc.save(`charts.pdf`);\n}\n\nasync function creatPdf({\n  doc,\n  elements,\n}: {\n  doc: jsPDF;\n  elements: HTMLCollectionOf<Element>;\n}) {\n  const padding = 10;\n  const marginTop = 20;\n  let top = marginTop;\n  \n\n  for (let i = 0; i < elements.length; i++) {\n    const el = elements.item(i) as HTMLElement;\n    const imgData = await htmlToImage.toPng(el);\n\n    let elHeight = el.offsetHeight;\n    let elWidth = el.offsetWidth;\n\n    const pageWidth = doc.internal.pageSize.getWidth();\n\n    if (elWidth > pageWidth) {\n      const ratio = pageWidth / elWidth;\n      elHeight = elHeight * ratio - padding * 2;\n      elWidth = elWidth * ratio - padding * 2;\n    }\n\n    const pageHeight = doc.internal.pageSize.getHeight();\n\n    if (top + elHeight > pageHeight) {\n      doc.addPage();\n      top = marginTop;\n    }\n\n    doc.addImage(imgData, \"PNG\", padding, top, elWidth, elHeight, `image${i}`);\n    top += elHeight + marginTop;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}